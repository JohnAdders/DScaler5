;///////////////////////////////////////////////////////////////////////////////
;// $Id$
;///////////////////////////////////////////////////////////////////////////////
;// Copyright (c) 2003 John Adcock.  All rights reserved.
;// Some macros taken from c32.mac from NASM
;// original header comments
;//   NASM macro set to make interfacing to 32-bit programs easier -*- nasm -*-
;///////////////////////////////////////////////////////////////////////////////
;//
;//  This file is subject to the terms of the GNU General Public License as
;//  published by the Free Software Foundation.  A copy of this license is
;//  included with this software distribution in the file COPYING.  If you
;//  do not have a copy, you may obtain a copy by writing to the Free
;//  Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
;//
;//  This software is distributed in the hope that it will be useful,
;//  but WITHOUT ANY WARRANTY; without even the implied warranty of
;//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;//  GNU General Public License for more details
;///////////////////////////////////////////////////////////////////////////////

;///////////////////////////////////////////////////////////////////////////////
;// Procedure helper functions
;///////////////////////////////////////////////////////////////////////////////
%imacro proc 2			; begin a procedure definition
%push proc
        global %1
%1:     enter %2, 0
    %assign %$arg 8
    %define %$procname %1
%endmacro


%imacro arg 0-1 4		; used with the argument name as a label
%00	  equ %$arg
%assign %$arg %1+%$arg
%endmacro


%imacro endproc 0
%ifnctx proc
%error Mismatched endproc proc
%else
		leave
		ret 0
__end_%$procname:		; useful for calculating function size
%pop
%endif
%endmacro

;///////////////////////////////////////////////////////////////////////////////
;// MMX/SSE/3DNow macros
;///////////////////////////////////////////////////////////////////////////////

%imacro DS_PAVGB 4
%ifdef _SSE
	pavgb %1, %2
%elifdef _MMX
	pavgb %1, %2
%elifdef _3DNOW
	pavgusb %1, %2
%else
	movq %3,%2
	pand %3, %4
	psrlw %3,1
	pand %1,%4
	psrlw %1,1
	paddusb %1,%3
%endif
%endmacro

%imacro DS_MOVNTQ 2
%ifdef _SSE
	movntq %1, %2
%elifdef _MMX
	movq %1, %2
%elifdef _3DNOW
	movq %1, %2
%else
	movq %1, %2
%endif
%endmacro

%imacro DS_COMBINE 3
	pand %1, %3
	pandn %3, %2
	por %1, %3
%endmacro

%imacro DS_PABS 3
   movq %3, %2
   psubusb	%3, %1
   psubusb  %1, %2
   por %1, %3
%endmacro
