////////////////////////////////////////////////////////////////////////////
// $Id$
/////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2003 John Adcock.  All rights reserved.
// This software was based on sample code generated by the 
// DMO project wizard.  That code is (c) Microsoft Corporation
/////////////////////////////////////////////////////////////////////////////
//
// This file is free software; you can redistribute it and/or modify it
// under the terms of the GNU Library General Public License as published by
// the Free Software Foundation; either version 2 of the License, or (at your
// option) any later version.
//
// This software is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Library General Public License for more details
//
/////////////////////////////////////////////////////////////////////////////

#pragma once

#include "..\..\DMO_Lib\DMO_Lib.h"
#include "..\..\DMO_Lib\CDeintDMO.h"
#include "resource.h"

DEFINE_GUID(CLSID_CDeint_Diag, 0xCAAD7294, 0x8B6C, 0x11d7, 0xB8, 0x51, 0x00, 0x02, 0xA5, 0x62, 0x33, 0x77);


class CDeint_Diag : 
    public CDeintDMO,
    public IAmFreeSoftwareLicensed
{
public:
IMPLEMENT_AGGREGATABLE_COCLASS(CDeint_Diag, "{CAAD7294-8B6C-11d7-B851-0002A5623377}", "Deint_Diag Class", "DMO.Deint_Diag.1", "DMO.Deint_Diag", "both")
    IMPLEMENTS_INTERFACE(IAmFreeSoftwareLicensed)
    IMPLEMENTS_INTERFACE(IMediaObject)
    IMPLEMENTS_INTERFACE(IMediaParams)
    IMPLEMENTS_INTERFACE(IMediaParamInfo)
    IMPLEMENTS_INTERFACE(IPersistStream)
    IMPLEMENTS_INTERFACE(ISpecifyPropertyPages)
    IMPLEMENTS_INTERFACE(IDScalerVideoFilterPlugin)
    IMPLEMENTS_INTERFACE(IInterlacedBufferStack)
    IMPLEMENTS_INTERFACE(IDeinterlace)
    IMPLEMENTS_INTERFACE(IDScalerFilterPlugin)
END_INTERFACE_TABLE()

public:
    CDeint_Diag();    // Constructor
    ~CDeint_Diag();    // Destructor

BEGIN_PARAM_LIST()
END_PARAM_LIST()

public:
    STDMETHODIMP STDMETHODCALLTYPE GetClassID(CLSID *pClsid);

// IAmFreeSoftwareLicensed
public:
    STDMETHOD(get_Name)(BSTR* Name);
    STDMETHOD(get_License)(eFreeLicense* License);
    STDMETHOD(get_Authors)(BSTR* Authors);

// IDeinterlace
public:
    STDMETHOD(Process)(IInterlacedBufferStack* Stack, IMediaBuffer* pOutBuffer);

private:
    void ProcessChromaTop(BYTE* pUpperChroma, BYTE* pLowerChroma, BYTE* pMap, BYTE* pOutputData, VIDEOINFOHEADER2* InputInfo, VIDEOINFOHEADER2* OutputInfo);
    void ProcessChromaBottom(BYTE* pLowerChroma, BYTE* pUpperChroma, BYTE* pMap, BYTE* pOutputData, VIDEOINFOHEADER2* InputInfo, VIDEOINFOHEADER2* OutputInfo);
    HRESULT ParamChanged(DWORD dwParamIndex);
};

